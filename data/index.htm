<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Controle Portão</title>
    <meta name="mobile-web-app-capable" content="yes">
    <meta name="viewport" content="user-scalable=no, width=device-width, initial-scale=1.0, maximum-scale=1.0">
    <link rel="icon" href="https://t4.ftcdn.net/jpg/01/85/91/59/240_F_185915956_Pw79jOJmiCb9OcHTP927IoKrdO8UHM7W.jpg">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  </head>
  <body ONLOAD="forceReload()">
    <audio id="tickSound" preload="auto" >
      <source src="https://raw.githubusercontent.com/matricce/WiFi-Controlled-Gate/master/data/click.mp3" type="audio/mpeg">
    </audio>
    <div class="buttonHolder">
      <button ONCLICK='location.reload(0)'><i class="fa fa-refresh"></i></button>
      <a href="#" id="btn" class="button"><i class="fa fa-bolt"></i></a>
    </div>
    <h1 id="timeOn"></h1>
  </body>
<style>
* {
  margin:0;
  padding:0;
  box-sizing: border-box;
}
html, body {
  min-height: 100%;
  min-width: 100%;
}
body {
  background-image: -webkit-linear-gradient(top, #edecec, #cecbc9);
  overscroll-behavior: contain;
}
.buttonHolder {
  align-items: center;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  position: absolute;
  background-color: rgba(255, 0, 0, 0.5);
}
.button {
  background-image: -webkit-linear-gradient(top, #f4f1ee, #fff);
  box-shadow: 0px 8px 10px 0px rgba(0, 0, 0, .3), inset 0px 4px 1px 4px white, inset 0px -3px 1px 1px rgba(204,198,197,.5);
  animation: buttonRelease .1s forwards;
  border-radius: 50%;
  height: 80vw;
  max-height: 350px;
  max-width: 350px;
  width: 80vw;
}
.button:after {
  color: #e9e6e4;
  content: "";
  height: 30px;
  position: absolute;
  width: 30px;
  display: flex;
  justify-content: center;
  align-items: center;
  filter: grayscale(0);
}
a {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 60vw;
  text-decoration: none;
  color: springgreen;
  text-shadow: 0px -1px 1px #bdb5b4, 1px 1px 1px white;
  -webkit-tap-highlight-color: transparent;
  transition: .1s;
}
h1, button {
  color: rgb(114, 112, 112);
  text-shadow: 0px -1px 1px #bdb5b4, 1px 1px 1px white;
  font-family: monospace;
  position: absolute;
  bottom: 1rem;
}
button {
  position: absolute;
  top: 1rem;
  right: 1rem;
  bottom: 100vh;
  border: none;
  font-size: 3rem;
  outline:0;
}
/* .button:active {
  animation: buttonClick .1s forwards;
} */
@keyframes buttonClick {
  to {
    background-image: -webkit-linear-gradient(top, #efedec, #f7f4f4);
    box-shadow: 0 3px 5px 0 rgba(0,0,0,.4), inset 0px -3px 1px 4px rgba(204,198,197,.5);
    transform: scale(.98);
  }
}
@keyframes buttonRelease {
  from {
    background-image: -webkit-linear-gradient(top, #efedec, #f7f4f4);
    box-shadow: 0 3px 5px 0 rgba(0,0,0,.4), inset 0px -3px 1px 4px rgba(204,198,197,.5);
    transform: scale(.98);
  }
  to {
    background-image: -webkit-linear-gradient(top, #f4f1ee, #fff);
    box-shadow: 0px 8px 10px 0px rgba(0, 0, 0, .3), inset 0px 4px 1px 4px white, inset 0px -3px 1px 1px rgba(204,198,197,.5);
    transform: scale(1);
  }
}
@media (min-width: 400px) {
  a {
    font-size: 250px;
  }
}
@media (max-width: 400px) {
  h1 {
    font-size: 6vw;
  }
}
</style>
<script>
var websock;
var t0 = 0;
var t1 = 0;
var state = 0;
var button = document.getElementById('btn');
var btn_sound = document.getElementById('tickSound');
const socketMessageListener = (event) => {
  t0 = performance.now();
  JSONobj = JSON.parse(event.data);
  state = JSONobj.controlOn;
  document.getElementById('timeOn').innerHTML = `Ligado há: ${JSONobj.timeOn}`; 
  document.getElementsByClassName('buttonHolder')[0].style.backgroundColor = 'rgba(255,0,0,0)';
    if(JSONobj.controlOn == 'ON') {;
      btn_sound.play();
      button.style.animation = 'buttonClick .1s forwards';
      button.style.color = 'red';
    }
    else {
      btn_sound.pause();
      btn_sound.currentTime = 0;
      button.style.animation = 'buttonRelease .1s forwards';
      button.style.color = 'springgreen';
    }
};

const socketOpenListener = (event) => {
  console.log('Connected');
};

const socketCloseListener = (event) => {;
  if (websock) {
    console.error('Disconnected.');
  }
  websock = new WebSocket("ws://" + window.location.hostname + ":88/");
  websock.addEventListener('open', socketOpenListener);
  websock.addEventListener('message', socketMessageListener);
  websock.addEventListener('close', socketCloseListener);
};

socketCloseListener();   
button.onclick = function (event) {
  if(state === 'OFF') {
    websock.send('LEDonoff=ON');
  }
}
function forceReload() {
setInterval(verify, 1500);
}
function verify() {
if(t1 - t0 > 3500) {
  document.getElementsByClassName('buttonHolder')[0].style.backgroundColor = 'rgba(255,0,0,0.5)';
  location.reload(0);
}
t1 = performance.now();
}
window.oncontextmenu = function(event) {
     event.preventDefault();
     event.stopPropagation();
     return false;
};
</script>
</html>